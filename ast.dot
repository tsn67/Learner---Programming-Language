digraph AST {
    node [shape=box, style=filled, color=lightblue];
    node0 [label="FunctionNode:main(VOID)"];
    node1 [label="DeclarationNode: a (NUMBER) "];
    node0 -> node1;
    node2 [label="Literal: 10"];
    node1 -> node2;
    node3 [label="DeclarationNode: b (NUMBER) "];
    node0 -> node3;
    node4 [label="Literal: 20"];
    node3 -> node4;
    node5 [label="DeclarationNode: c (NUMBER) "];
    node0 -> node5;
    node6 [label="Operator: +"];
    node5 -> node6;
    node7 [label="Identifier: a"];
    node6 -> node7;
    node8 [label="Identifier: b"];
    node6 -> node8;
    node9 [label="while node expression_node: OPERATOR"];
    node0 -> node9;
    node10 [label="assignment_node: c"];
    node9 -> node10;
    node11 [label="Operator: +"];
    node10 -> node11;
    node12 [label="Identifier: c"];
    node11 -> node12;
    node13 [label="Literal: 1"];
    node11 -> node13;
    node14 [label="assignment_node: temp"];
    node9 -> node14;
    node15 [label="Operator: +"];
    node14 -> node15;
    node16 [label="Operator: +"];
    node15 -> node16;
    node17 [label="Parenthesis"];
    node16 -> node17;
    node18 [label="Operator: *"];
    node17 -> node18;
    node19 [label="Identifier: tesmp"];
    node18 -> node19;
    node20 [label="Identifier: sdf"];
    node18 -> node20;
    node21 [label="Literal: 1"];
    node16 -> node21;
    node22 [label="Parenthesis"];
    node15 -> node22;
    node23 [label="Operator: *"];
    node22 -> node23;
    node24 [label="Identifier: sdfsf"];
    node23 -> node24;
    node25 [label="Literal: 2"];
    node23 -> node25;
    node26 [label="assignment_node: c"];
    node9 -> node26;
    node27 [label="Operator: +"];
    node26 -> node27;
    node28 [label="Identifier: c"];
    node27 -> node28;
    node29 [label="Literal: 1"];
    node27 -> node29;
    node30 [label="IF NODE:expression_node: OPERATORelse: true"];
    node0 -> node30;
    node31 [label="assignment_node: c"];
    node30 -> node31;
    node32 [label="Operator: +"];
    node31 -> node32;
    node33 [label="Identifier: c"];
    node32 -> node33;
    node34 [label="Literal: 1"];
    node32 -> node34;
    node35 [label="assignment_node: c"];
    node0 -> node35;
    node36 [label="Operator: +"];
    node35 -> node36;
    node37 [label="Identifier: c"];
    node36 -> node37;
    node38 [label="Literal: 1"];
    node36 -> node38;
}
